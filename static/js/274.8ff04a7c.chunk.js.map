{"version":3,"file":"static/js/274.8ff04a7c.chunk.js","mappings":"4QAEaA,EAAaC,EAAAA,EAAAA,GAAH,wCAIVC,EAAWD,EAAAA,EAAAA,GAAH,yC,SC6CrB,EA7Ca,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaP,GAFlB,OAERG,EAFQ,OAGdC,EAAQD,GAHM,gDAKdK,QAAQC,IAAR,MALc,yDAAH,qDAQfH,GACD,GAAE,CAACN,KAGF,+BAEI,SAACH,EAAD,UACGM,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,UAACf,EAAD,YACE,gBACEgB,IAAG,UACDH,EC/Ba,mCDgCSA,EAClBI,4CAAyBH,GAE/BI,IAAKJ,KAEP,0BACE,sCADF,IACwBA,MAExB,0BACE,yCADF,IAC2BC,OAbdH,EADP,OAsBnB,C,uKE9CDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAgBff,EAAY,mCAAG,WAAMP,GAAN,yFACHkB,EAAAA,EAAAA,IAAA,gBACZlB,EADY,4BACemB,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKlB,MALc,2CAAH,sDAOZsB,EAAe,mCAAG,WAAMzB,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,gBACZlB,EADY,4BACemB,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["components/Cast/Cast.module.jsx","components/Cast/Cast.jsx","utils/constants.js","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n margin: 12px;\n`;\n\nexport const ListItem = styled.li`\n  margin: 12px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from 'services/getMovies';\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\nimport { ListItem, StyledList } from './Cast.module';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await getCastMovie(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <StyledList>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <ListItem key={id}>\n              <img\n                src={`${\n                  profile_path\n                    ? BASE_POSTER_URL + profile_path\n                    : PLACEHOLDER + '?text=' + original_name\n                }`}\n                alt={original_name}\n              />\n              <p>\n                <span> Actor:</span> {original_name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n            </ListItem>\n          ))}\n        </StyledList>\n      }\n    </>\n  );\n};\n\nexport default Cast;","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';","import axios from \"axios\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1e55a261b3f7dff24c919e8356225a2d';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};"],"names":["StyledList","styled","ListItem","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","getCastMovie","console","log","map","id","profile_path","original_name","character","src","PLACEHOLDER","alt","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getReviewsMovie"],"sourceRoot":""}